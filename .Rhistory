s.Nervous.System = sum(Nervous.System),s.Musculoskeletal = sum(Musculoskeletal),
s.Skin = sum(Skin),s.Genitourinary = sum(Genitourinary),
s.Cardiovascular = sum(Cardiovascular), s.Respiratory = sum(Respiratory),
s.Other = sum(Other))
df3<- df3 %>% group_by_(~State) %>% summarise(s.Gastrointestinal = sum(Gastrointestinal, na.rm = TRUE))
new.data <-na.omit(df3)
View(new.data)
df3<- df3 %>% group_by_(~State) %>% summarise(s.Gastrointestinal = sum(Gastrointestinal),n = n())
df3<- df3 %>% group_by_(~State) %>% summarise(s.Gastrointestinal = sum(Gastrointestinal != "Not Available"))
View (df3)
df3<- df3 %>% group_by_(~State) %>% summarise(s.Gastrointestinal = sum(Gastrointestinal != "Not Available"),s.Eye = sum(Eye != "Not Available"),
s.Nervous.System = sum(Nervous.System != "Not Available" ),s.Musculoskeletal = sum(Musculoskeletal != "Not Available"),
s.Skin = sum(Skin != "Not Available"),s.Genitourinary = sum(Genitourinary != "Not Available"),
s.Cardiovascular = sum(Cardiovascular != "Not Available"), s.Respiratory = sum(Respiratory != "Not Available"),
s.Other = sum(Other != "Not Available"))
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
df3<- df3 %>% group_by_(~State) %>% summarise(s.Gastrointestinal = sum(Gastrointestinal != "Not Available"),s.Eye = sum(Eye != "Not Available"),
s.Nervous.System = sum(Nervous.System != "Not Available" ),s.Musculoskeletal = sum(Musculoskeletal != "Not Available"),
s.Skin = sum(Skin != "Not Available"),s.Genitourinary = sum(Genitourinary != "Not Available"),
s.Cardiovascular = sum(Cardiovascular != "Not Available"), s.Respiratory = sum(Respiratory != "Not Available"),
s.Other = sum(Other != "Not Available"))
View(df3)
plot_ly(df3, x = ~State, y = ~s.Gastrointestinal, color = ~s.Gastrointestinal,
size = ~s.Gastrointestinal, text = ~paste("Clarity: ", clarity))
plot_ly(df3, x = ~State, y = ~s.Gastrointestinal, color = ~s.Gastrointestinal,
size = ~s.Gastrointestinal, text = ~paste("Clarity: ", s.Gastrointestinal))
plot_ly(df3, x = ~s.Gastrointestinal, y = ~State, color = ~s.Gastrointestinal,
size = ~s.Gastrointestinal, text = ~paste("Clarity: ", s.Gastrointestinal))
library(plotly)
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"))
df3<- df3 %>% group_by_(~State) %>% summarise(s.Gastrointestinal = sum(Gastrointestinal != "Not Available"))
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Build a function that shows the bubble dot plot with bar
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"))
View(df3)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous.System = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available"))
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Build a function that shows the bubble dot plot with bar
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous.System = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available"))
View(df3)
BuildBubble.state <- function(data,xvar,yvar){
#get the x and y as string
x.equation <- paste0('~', xvar)
y.equation <- paste0('~', yvar)
#Create a function for the bubble chat we will display.
#We use evel(parse(text = string variable)) sytax to let the function p to evaluate them as number.
p <- plot_ly(df, x =  eval(parse(text = x.equation)),
y = eval(parse(text = y.equation)), type = 'scatter', mode = 'markers', size = eval(parse(text = y.equation)),
#The color is set by Species
#And the range of the size is choosen because I think it will be the best way to read.
color = df3$State, colors = 'Paired',sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'),
hoverinfo = 'text',
#In the text part, we need to use the df[, eval(variabe we pass)] to get the column that matches the variable that we passed in the function.
#Paste the related information next to the bubble.
text = ~paste('State:', df3$State, '<br />', xvar,':',df[, eval(xvar)],'<br />',yvar,':',df[,eval(yvar)])) %>%
#Set the title of the graph that will be layout correspond to the variable we are using for comparing the flowers.
layout(title = paste0("Comparison of ",str_to_title(xvar)," and ",str_to_title(yvar)),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot in the end.
return(p)
}
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous System = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available"))
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous.System = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available"))
df4<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>%
mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
View(df4)
df4<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available"))
View(df4)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available"))
View(df3)
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
View(df3)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available"))
View(df3)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Build a function that shows the bubble dot plot with bar
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
View(df3)
df3<- df3 %>% group_by_(~State)
View
View(df3)
df3<- df3 %>% group_by_(~State != "Not Available") %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
df3<- df3 %>% group_by_(~State != "Not Available") %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
View(df3)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Build a function that shows the bubble dot plot with bar
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
View(df3)
df3<- df3 %>% group_by_(~State,na.rm = TRUE) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
df3 <- left_join(df2,df1,by= "Hospital.Name")
df3<- df3 %>% group_by_(~State,na.rm = TRUE) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
View(df3)
df3<- df3 %>% filter_(~State != '')
View(df3)
df3<- df3 %>% filter_(~State != '') %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
df3<- df3 %>% filter_(~State != '') %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
View(df3)
BuildBubble.state <- function(data,yvar,xvar = "sum"){
#get the x and y as string
x.equation <- paste0('~', xvar)
y.equation <- paste0('~', yvar)
#Create a function for the bubble chat we will display.
#We use evel(parse(text = string variable)) sytax to let the function p to evaluate them as number.
p <- plot_ly(data, x =  eval(parse(text = x.equation)),
y = eval(parse(text = y.equation)), type = 'scatter', mode = 'markers', size = eval(parse(text = y.equation)),
#The color is set by Species
#And the range of the size is choosen because I think it will be the best way to read.
color = df3$State, colors = 'Paired',sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'),
hoverinfo = 'text',
#In the text part, we need to use the df[, eval(variabe we pass)] to get the column that matches the variable that we passed in the function.
#Paste the related information next to the bubble.
text = ~paste('State:', df3$State, '<br /> Sum of the surgeries',':',df[, eval(xvar)],'<br />Numbers of ',yvar,' surgery:',df[,eval(yvar)])) %>%
#Set the title of the graph that will be layout correspond to the variable we are using for comparing the flowers.
layout(title = paste0("Comparison of ",str_to_title(xvar)," and ",str_to_title(yvar)),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot in the end.
return(p)
}
BuildBubble.state <- function(df,yvar,xvar = "sum"){
#get the x and y as string
x.equation <- paste0('~', xvar)
y.equation <- paste0('~', yvar)
#Create a function for the bubble chat we will display.
#We use evel(parse(text = string variable)) sytax to let the function p to evaluate them as number.
p <- plot_ly(df, x =  eval(parse(text = x.equation)),
y = eval(parse(text = y.equation)), type = 'scatter', mode = 'markers', size = eval(parse(text = y.equation)),
#The color is set by Species
#And the range of the size is choosen because I think it will be the best way to read.
color = df$State, colors = 'Paired',sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'),
hoverinfo = 'text',
#In the text part, we need to use the df[, eval(variabe we pass)] to get the column that matches the variable that we passed in the function.
#Paste the related information next to the bubble.
text = ~paste('State:', df$State, '<br /> Sum of the surgeries',':',df[, eval(xvar)],'<br />Numbers of ',yvar,' surgery:',df[,eval(yvar)],
'<br />Percentage: ',round(df[,eval(yvar)]/df[, eval(xvar)]))) %>%
#Set the title of the graph that will be layout correspond to the variable we are using for comparing the flowers.
layout(title = paste0("Comparison of ",str_to_title(xvar)," and ",str_to_title(yvar)),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot in the end.
return(p)
}
runApp('C:/Users/Sony/Downloads/INFO/m14-shiny/exercise-3')
runApp('C:/Users/Sony/Downloads/INFO/m14-shiny/exercise-4')
library(stringr)
library(dplyr)
# ui.R
library(shiny)
library(plotly)
library(stringr)
library(dplyr)
shinyUI(navbarPage('Procedures acrss USA in 2014',
# Create a tab panel for your map
tabPanel('In-depth data analyzation',
titlePanel('analyztion by levels'),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to map
selectInput('ycol', 'Y Variable',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'),
selected = "Gastrointestinal")
),
# Main panel: display plotly map
mainPanel(
plotlyOutput('bubble.state')
)
)
)
))
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
source('./scripts/bubbledotchart.R')
source('./scripts/bubbledotchart.r')
source('./Scripts/bubbledotchart.r')
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Build a function that shows the bubble dot plot with bar
df3<- df3 %>% filter_(~State != '') %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal != "Not Available"),Eye = sum(Eye != "Not Available"),
Nervous = sum(Nervous.System != "Not Available" ),Musculoskeletal = sum(Musculoskeletal != "Not Available"),
Skin = sum(Skin != "Not Available"),Genitourinary = sum(Genitourinary != "Not Available"),
Cardiovascular = sum(Cardiovascular != "Not Available"), Respiratory = sum(Respiratory != "Not Available"),
Other = sum(Other != "Not Available")) %>% mutate(sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
BuildBubble.state <- function(df,yvar,xvar = "sum"){
#get the x and y as string
x.equation <- paste0('~', xvar)
y.equation <- paste0('~', yvar)
#Create a function for the bubble chat we will display.
#We use evel(parse(text = string variable)) sytax to let the function p to evaluate them as number.
p <- plot_ly(df, x =  eval(parse(text = x.equation)),
y = eval(parse(text = y.equation)), type = 'scatter', mode = 'markers', size = eval(parse(text = y.equation)),
#The color is set by Species
#And the range of the size is choosen because I think it will be the best way to read.
color = df$State, colors = 'Paired',sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'),
hoverinfo = 'text',
#In the text part, we need to use the df[, eval(variabe we pass)] to get the column that matches the variable that we passed in the function.
#Paste the related information next to the bubble.
text = ~paste('State:', df$State, '<br /> Sum of the surgeries',':',df[, eval(xvar)],'<br />Numbers of ',yvar,' surgery:',df[,eval(yvar)],
'<br />Percentage: ',round(df[,eval(yvar)]/df[, eval(xvar)]))) %>%
#Set the title of the graph that will be layout correspond to the variable we are using for comparing the flowers.
layout(title = paste0("Comparison of ",str_to_title(xvar)," and ",str_to_title(yvar)),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot in the end.
return(p)
}
getwd()
source('../Scripts/bubbledotchart.r')
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
#Read in data
#Set the data set into the data frame
source('../Scripts/bubbledotchart.r')
source('../Scripts/bubbledotchart.r')
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
View(df3)
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
#Read in data
#Set the data set into the data frame
source('../Scripts/bubbledotchart.r')
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Start Shiny server
shinyServer(function(input, output) {
# Render a plotly object that returns your map
#Put the variables of the data frame and the two you need for comparison into the function(which you get these from the ui)
output$bubble <- renderPlotly({
return(BuildBubble.state(df3, input$ycol))
})
})
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
#Read in data
#Set the data set into the data frame
source('../Scripts/bubbledotchart.r')
df1<- read.csv('../data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('../data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Start Shiny server
shinyServer(function(input, output) {
# Render a plotly object that returns your map
#Put the variables of the data frame and the two you need for comparison into the function(which you get these from the ui)
output$bubble.state <- renderPlotly({
return(BuildBubble.state(df3, input$ycol))
})
})
runApp('C:/Users/Sony/Downloads/INFO/final-project')
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
#Read in data
#Set the data set into the data frame
source('./Scripts/bubbledotchart.r')
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df3 <- left_join(df2,df1,by= "Hospital.Name")
#Start Shiny server
shinyServer(function(input, output) {
# Render a plotly object that returns your map
#Put the variables of the data frame and the two you need for comparison into the function(which you get these from the ui)
output$bubble.state <- renderPlotly({
return(BuildBubble.state(df3, input$ycol))
})
})
runApp()
runApp()
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE,na.rm = TRUE)
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
plot_ly(df2, x =  df2$Nervous.System,
y = df2$Gastrointestinal, type = 'scatter', mode = 'markers', size = df2$Gastrointestinal,
#The color is set by Species
#And the range of the size is choosen because I think it will be the best way to read.
color = df2$Hospital.Name, colors = 'Paired',sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'),
hoverinfo = 'text',
#In the text part, we need to use the df[, eval(variabe we pass)] to get the column that matches the variable that we passed in the function.
#Paste the related information next to the bubble.
text = ~paste('Hospital:', df2$Hospital.Name, '<br /> Sum of the surgeries',':',df2$Cardiovascular,'<br />Numbers of ',df2$Skin,' surgery:',df2$Gastrointestinal,
'<br />Percentage:' )) %>%
#Set the title of the graph that will be layout correspond to the variable we are using for comparing the flowers.
layout(title = paste0("Proportion of ",df2$Gastrointestinal," surgery in State level"),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
View(df2)
df2 <-df2 %>% filter_(~Gastrointestinal != "Not Available")
View(df2)
df2 <- filter_(df2,~Gastrointestinal != "Not Available")
# server.R
library(dplyr)
library(shiny)
library(plotly)
# Read in data
setwd('C:/Users/Sony/Downloads/INFO/m14-shiny/exercise-4')
source('./scripts/buildMap.R')
source('./scripts/buildScatter.R')
df <- read.csv('./data/electoral_college.csv', stringsAsFactors = FALSE)
state.codes <- read.csv('./data/state_codes.csv', stringsAsFactors = FALSE)
# Join together state.codes and df
joined.data <- left_join(df, state.codes, by="state")
# Compute the electoral votes per 100K people in each state
joined.data <- joined.data %>% mutate(ratio = votes/population * 100000)
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$map <- renderPlotly({
return(BuildMap(joined.data, input$mapvar))
})
output$scatter <- renderPlotly({
return(BuildScatter(joined.data, input$search))
})
})
runApp('C:/Users/Sony/Downloads/INFO/final-project')
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
#Read in data
#Set the data set into the data frame
source('./Scripts/bubbledotchart.r')
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df2 <- df2 %>% filter_(~Gastrointestinal != "Not Available") %>% (sum = Gastrointestinal + Eye + Nervous + Musculoskeletal + Skin + Genitourinary + Cardiovascular + Respiratory + Other)
#Start Shiny server
shinyServer(function(input, output) {
# Render a plotly object that returns your map
#Put the variables of the data frame and the two you need for comparison into the function(which you get these from the ui)
output$bubble.state <- renderPlotly({
return(BuildBubble.state(df2, input$ycol))
})
})
runApp('C:/Users/Sony/Downloads/INFO/final-project')
shiny::runApp()
