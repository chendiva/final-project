showlegend = FALSE)
#Return the plot in the end.
return(p)
}
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste('Percentage:',round(as.numeric(df3[,eval(yvar)])*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of diffent types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
return(p)
}
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste('Percentage:',round(as.numeric(df3[,eval(yvar)])*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of diffent types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
return(p)
}
runApp()
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste('Percentage:',round(as.double(as.numeric(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of diffent types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
return(p)
}
runApp()
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste('Percentage:',round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of diffent types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
return(p)
}
runApp()
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = paste('Percentage:',round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
return(p)
}
runApp()
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("HI: ", clarity))
runApp('C:/Users/Sony/Downloads/INFO/a8-building-apps-chendiva')
runApp('C:/Users/Sony/Downloads/INFO/a8-building-apps-chendiva')
runApp()
shiny::runApp()
shiny::runApp()
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
library(DT)
#Read in data
#Set the data set into the data frame
source('./Scripts/bubbledotchart.r')
source('./Scripts/barchart.r')
source('./Scripts/piecharthospital.r')
#df1 and df2 are two files that we are using
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df4 = df1 %>% distinct_(~Hospital.Name,~State)
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
shinyServer(function(input, output) {
# Render a plotly object that returns your map, charts and the table
#Put the variables of the data frame that you need for comparison into the function(which you get these from the ui)
output$bar.state <-renderPlotly({
return(BuildBar.state(input$ycol2))
})
output$bubble <- renderPlotly({
return(BuildBubble(input$ycol))
})
output$table1 <- DT::renderDataTable(
DT::datatable(df5, options = list(pageLength = 20))
)
output$pie.hospital<-renderPlotly({
return(BuildPie.hospital(input$ycol3))
})
})
View(df4)
runApp()
# ui.R
library(shiny)
library(plotly)
library(stringr)
library(dplyr)
library(DT)
shinyUI(navbarPage('Procedures across USA in 2014',
# Create a tab panel for your charts
tabPanel('State level analyzation',
titlePanel('analyztion of different kind of procedures in state level'),
# Create sidebar layout for the in-depth analyzation from different levels.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the state level, you choose the surgery you want to compare among all the states that are information available(Some hospital refused to offer their statistics)
selectInput('ycol2', 'Type of Surgery for State level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bar.state'),
)
)
),
tabPanel('Hopital level analyzation',
titlePanel('analyztion of various procedures in the hospital level'),
# Create sidebar layout for the in-depth analyzation from different levels.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the hospital level, there are two ways to compare, the bubble chart offers you a way to compare certain surgery among all the hospitals that offered their statistics.
#The pie chart based on the hospital level offer you a choice of hospital you want to look into, and show the proportion of the procedures that the hospital had conducted.
selectInput('ycol', 'Type of Surgery for hospital level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
),
selectInput('ycol3', 'Hopital choice',
choices = df2$Hospital.Name ,
selected = "CROSSROADS COMMUNITY HOSPITAL")
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bubble'),DT::dataTableOutput('table1'),
plotlyOutput('pie.hospital')
)
)
)
))
# ui.R
library(shiny)
library(plotly)
library(stringr)
library(dplyr)
library(DT)
shinyUI(navbarPage('Procedures across USA in 2014',
# Create a tab panel for your charts
tabPanel('State level analyzation',
titlePanel('analyztion of different kind of procedures in state level'),
# Create sidebar layout for the in-depth analyzation from different levels.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the state level, you choose the surgery you want to compare among all the states that are information available(Some hospital refused to offer their statistics)
selectInput('ycol2', 'Type of Surgery for State level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bar.state')
)
)
),
tabPanel('Hopital level analyzation',
titlePanel('analyztion of various procedures in the hospital level'),
# Create sidebar layout for the in-depth analyzation from different levels.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the hospital level, there are two ways to compare, the bubble chart offers you a way to compare certain surgery among all the hospitals that offered their statistics.
#The pie chart based on the hospital level offer you a choice of hospital you want to look into, and show the proportion of the procedures that the hospital had conducted.
selectInput('ycol', 'Type of Surgery for hospital level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
),
selectInput('ycol3', 'Hopital choice',
choices = df2$Hospital.Name ,
selected = "CROSSROADS COMMUNITY HOSPITAL")
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bubble'),DT::dataTableOutput('table1'),
plotlyOutput('pie.hospital')
)
)
)
))
runApp()
runApp()
shiny::runApp()
# ui.R
library(shiny)
library(plotly)
library(stringr)
library(dplyr)
library(DT)
shinyUI(navbarPage('Procedures across USA in 2014',
# Create a tab panel for your charts
tabPanel('State level analyzation',
titlePanel('Analyztion of different kind of procedures in state level'),
# Create sidebar layout for the in-depth analyzation from state level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the state level, you choose the surgery you want to compare among all the states that are information available(Some hospital refused to offer their statistics)
selectInput('ycol2', 'Type of Surgery for State level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bar.state')
)
)
),
tabPanel('Hopital level analyzation',
titlePanel('Analyztion of various procedures in the hospital level'),
# Create sidebar layout for the in-depth analyzation from hospital level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the hospital level, there are two ways to compare, the bubble chart offers you a way to compare certain surgery among all the hospitals that offered their statistics.
selectInput('ycol', 'Type of Surgery for hospital level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bubble'),DT::dataTableOutput('table1'),
plotlyOutput('pie.hospital')
)
)
),
tabPanel('Search a hospital',
titlePanel('Search specific hospital data'),
# Create sidebar layout for the hopital that the user want to look at.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#The pie chart based on the hospital level offer you a choice of hospital you want to look into, and show the proportion of the procedures that the hospital had conducted.
#A table contains the hospital name, state, and procedures' numbers
selectInput('ycol3', 'Hopital choice',
choices = df2$Hospital.Name ,
selected = "CROSSROADS COMMUNITY HOSPITAL")
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('pie.hospital'), DT::dataTableOutput('table1')
)
)
)
))
# ui.R
# ui.R
library(shiny)
library(plotly)
library(stringr)
library(dplyr)
library(DT)
shinyUI(navbarPage('Procedures across USA in 2014',
# Create a tab panel for your charts
tabPanel('State level analyzation',
titlePanel('Analyztion of different kind of procedures in state level'),
# Create sidebar layout for the in-depth analyzation from state level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the state level, you choose the surgery you want to compare among all the states that are information available(Some hospital refused to offer their statistics)
selectInput('ycol2', 'Type of Surgery for State level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bar.state')
)
)
),
tabPanel('Hopital level analyzation',
titlePanel('Analyztion of various procedures in the hospital level'),
# Create sidebar layout for the in-depth analyzation from hospital level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the hospital level, there are two ways to compare, the bubble chart offers you a way to compare certain surgery among all the hospitals that offered their statistics.
selectInput('ycol', 'Type of Surgery for hospital level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('pie.hospital')
)
)
),
tabPanel('Search a hospital',
titlePanel('Search specific hospital data'),
# Create sidebar layout for the hopital that the user want to look at.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#The pie chart based on the hospital level offer you a choice of hospital you want to look into, and show the proportion of the procedures that the hospital had conducted.
#A table contains the hospital name, state, and procedures' numbers
selectInput('ycol3', 'Hopital choice',
choices = df2$Hospital.Name ,
selected = "CROSSROADS COMMUNITY HOSPITAL")
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('pie.hospital'), DT::dataTableOutput('table1')
)
)
)
))
