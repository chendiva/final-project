# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the state level, you choose the surgery you want to compare among all the states that are information available(Some hospital refused to offer their statistics)
selectInput('ycol2', 'Type of Surgery for State level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bar.state')
)
)
),
tabPanel('Hopital level analyzation',
titlePanel('Analyztion of various procedures in the hospital level'),
# Create sidebar layout for the in-depth analyzation from hospital level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the hospital level, there are two ways to compare, the bubble chart offers you a way to compare certain surgery among all the hospitals that offered their statistics.
selectInput('ycol', 'Type of Surgery for hospital level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('pie.hospital')
)
)
),
tabPanel('Search a hospital',
titlePanel('Search specific hospital data'),
# Create sidebar layout for the hopital that the user want to look at.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#The pie chart based on the hospital level offer you a choice of hospital you want to look into, and show the proportion of the procedures that the hospital had conducted.
#A table contains the hospital name, state, and procedures' numbers
selectInput('ycol3', 'Hopital choice',
choices = df2$Hospital.Name ,
selected = "CROSSROADS COMMUNITY HOSPITAL")
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('pie.hospital'), DT::dataTableOutput('table1')
)
)
)
))
runApp()
runApp()
shiny::runApp()
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:"))%>% #,round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:"))%>% #,round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot
return(p)
}
p
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot
return(p)
}
p
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df4 = df1 %>% distinct_(~Hospital.Name,~State)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(Gastrointestinal)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
y.equation <- paste0('~', Gastrointestinal)
y.equation <- paste0('~', df3$Gastrointestinal)
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df4 = df1 %>% distinct_(~Hospital.Name,~State)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', df3$Gastrointestinal)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(Gastrointestinal)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df4 = df1 %>% distinct_(~Hospital.Name,~State)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', df3$Gastrointestinal)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(df3$Gastrointestinal)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
p
VIew(df3)
View(df3)
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df4 = df1 %>% distinct_(~Hospital.Name,~State)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', df3$Gastrointestinal)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(df3[[Gastrointestinal]])*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
df4 = df1 %>% distinct_(~Hospital.Name,~State)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', df3$Gastrointestinal)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(df3[,eval(Gastrointestinal)]])*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
df4 = df1 %>% distinct_(~Hospital.Name,~State)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', df3$Gastrointestinal)
yvar <- "Gastrointestinal"
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval()]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
p
df4 = df1 %>% distinct_(~Hospital.Name,~State)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', df3$Gastrointestinal)
yvar <- "Gastrointestinal"
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
p
print(y.equation)
runApp()
#Load the package we need for this chart
library(plotly)
library(shiny)
library(stringr)
library(dplyr)
#Build a bar chart based on the state level for comparison.
BuildBar.state <- function(yvar, df3){
#We need transfer the value in the data set to the numeric value in order to do the calculation and the arrangement
#Then, we group the data by state and create replace the original data frame based on the state level.
#Create a sum level that has the total of procedures based on the state level.
df3$Eye.s <- as.numeric(df3$Eye)
df3$Nervous.System.s <-as.numeric(df3$Nervous.System)
df3$Musculoskeletal.s <- as.numeric(df3$Musculoskeletal)
df3$Genitourinary.s <-as.numeric(df3$Genitourinary)
df3$Skin.s <-as.numeric(df3$Skin)
df3$Cardiovascular.s <-as.numeric(df3$Cardiovascular)
df3$Respiratory.s <- as.numeric(df3$Respiratory)
df3$Other.s <- as.numeric(df3$Other)
df3$Gastrointestinal.s <-as.numeric(df3$Gastrointestinal)
df3<- df3 %>% group_by_(~State) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#plot the bar chart, and set the size based on the sum of the total number of surgery, and the color based on the states.
#Display the percentage of each state based on their own total number of procedures.
p<-plot_ly(df3, x = df3$State, y = eval(parse(text = y.equation)), color = df3$State,
size = df3$sum,
text = ~paste("Percentage:",round(as.numeric(unlist(df3[,eval(yvar)]))*100/df3$sum,digit = 2),'%'))%>%
layout(title = paste0("Comparison of different types of surgery in State level "),
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot
return(p)
}
runApp()
runApp()
shiny::runApp()
#Load the package we need for this chart.
library(plotly)
library(dplyr)
library(stringr)
library(shiny)
#Build a function that shows the bubble dot plot
BuildBubble <- function(yvar){
#We first need to make arrangement of the data set since some hospital refused to offer the information.
#In order to make some calculation based on the data we have, we need to make sure that all the data are numeric
# So we get rid of the hospitals that refused to offer information about the statistics and used as.numeric syntax to make the information easy to calculate.
df2 <- df2 %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df2$sum <- as.numeric(df2$Gastrointestinal) + as.numeric(df2$Eye) + as.numeric(df2$Nervous.System)+ as.numeric(df2$Musculoskeletal) + as.numeric(df2$Genitourinary) + as.numeric(df2$Skin) + as.numeric(df2$Cardiovascular) + as.numeric(df2$Respiratory) +as.numeric(df2$Other)
#get the  y variable as string
y.equation <- paste0('~', yvar)
#Create a function for the bubble chat we will display.
#We use evel(parse(text = string variable)) sytax to let the function p to evaluate them as number.
p <- plot_ly(df2, x =  df2$sum,
y = eval(parse(text = y.equation)), type = 'scatter', mode = 'markers', size = df2$sum,
#The color is set by Hospital name.
#And the range of the size is choosen because I think it will be the best way to read.
color = df2$Hospital.Name, colors = 'Paired',sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'),
hoverinfo = 'text',
#In the text part, we need to use the df[, eval(variabe we pass)] to get the column that matches the variable that we passed in the function.
#Paste the related information next to the bubble.
text = ~paste('Hospital:', df2$Hospital.Name, '<br /> Sum of the surgeries',':',df2$sum,'<br />Numbers of ',yvar,' surgery:',df2[,eval(yvar)],
'<br />Percentage:',round(as.numeric(df2[,eval(yvar)])*100/df2$sum,digit = 2),'%' ))%>%
#Set the title of the graph that will be layout correspond to the variable we are using for comparing the procedures among different hospitals.
layout(title = paste0("Proportion of ",str_to_title(yvar)," surgery in various hospital"),
xaxis = list(title = "Sum of all the procedures in the hospital",
showgrid = FALSE),
yaxis = list(showgrid = FALSE),
showlegend = FALSE)
#Return the plot in the end.
return(p)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
