p <- plot_ly(s, x = Women, y = School, name = "Women",
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = Men, name = "Men", y = School, marker = list(color = "blue"),
mode = "markers") %>%
layout(
title = "Gender earnings disparity",
xaxis = list(title = "Annual Salary (in thousands)"),
margin = list(l = 65)
)
}
Builddot.city <-function(xvar,yvar){
df6$Eye.s <- as.numeric(df6$Eye)
df6$Nervous.System.s <-as.numeric(df6$Nervous.System)
df6$Musculoskeletal.s <- as.numeric(df6$Musculoskeletal)
df6$Genitourinary.s <-as.numeric(df6$Genitourinary)
df6$Skin.s <-as.numeric(df6$Skin)
df6$Cardiovascular.s <-as.numeric(df6$Cardiovascular)
df6$Respiratory.s <- as.numeric(df6$Respiratory)
df6$Other.s <- as.numeric(df6$Other)
df6$Gastrointestinal.s <-as.numeric(df6$Gastrointestinal)
df6<- df6 %>% group_by_(~City) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
data.needed1<- filter_(df6,~City %in% xvar) %>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = xvar)
data.needed2<- filter_(df6,~City %in% yvar)%>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = yvar)
data.needed3 <-left_join(data.needed2,data.needed1, by = "surgery")
#Create the function for the box chart according to the city level
p <- plot_ly(s, x = Women, y = School, name = "Women",
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = Men, name = "Men", y = School, marker = list(color = "blue"),
mode = "markers") %>%
layout(
title = "Gender earnings disparity",
xaxis = list(title = "Annual Salary (in thousands)"),
margin = list(l = 65)
)
}
#Install the packages that we need to use for this plot
library(ggplot2)
library(tidyr)
library(plotly)
library(shiny)
library(dplyr)
library(devtools)
library(reshape2)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
#In df4, I select the state and the hospital and the state name, which is necessary, since we doesn't need evey data
#Also because we are using this later to combine it with df2, which I have checked, not all the data are matched.
df4 = df1 %>% distinct_(~Hospital.Name,~State,~City)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df6 <- df5 %>% group_by_(~City) %>% select(City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
Builddot.city <-function(xvar,yvar){
df6$Eye.s <- as.numeric(df6$Eye)
df6$Nervous.System.s <-as.numeric(df6$Nervous.System)
df6$Musculoskeletal.s <- as.numeric(df6$Musculoskeletal)
df6$Genitourinary.s <-as.numeric(df6$Genitourinary)
df6$Skin.s <-as.numeric(df6$Skin)
df6$Cardiovascular.s <-as.numeric(df6$Cardiovascular)
df6$Respiratory.s <- as.numeric(df6$Respiratory)
df6$Other.s <- as.numeric(df6$Other)
df6$Gastrointestinal.s <-as.numeric(df6$Gastrointestinal)
df6<- df6 %>% group_by_(~City) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
data.needed1<- filter_(df6,~City %in% xvar) %>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = xvar)
data.needed2<- filter_(df6,~City %in% yvar)%>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = yvar)
data.needed3 <-left_join(data.needed2,data.needed1, by = "surgery")
#Create the function for the box chart according to the city level
p <- plot_ly(data.needed3, x = Women, y = School, name = "Women",
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = Men, name = "Men", y = School, marker = list(color = "blue"),
mode = "markers") %>%
layout(
title = "Gender earnings disparity",
xaxis = list(title = "Annual Salary (in thousands)"),
margin = list(l = 65)
)
}
y.equation <- paste0('~', yvar)
#Install the packages that we need to use for this plot
library(ggplot2)
library(tidyr)
library(plotly)
library(shiny)
library(dplyr)
library(devtools)
library(reshape2)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
#In df4, I select the state and the hospital and the state name, which is necessary, since we doesn't need evey data
#Also because we are using this later to combine it with df2, which I have checked, not all the data are matched.
df4 = df1 %>% distinct_(~Hospital.Name,~State,~City)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df6 <- df5 %>% group_by_(~City) %>% select(City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
Builddot.city <-function(xvar1,xvar2){
df6$Eye.s <- as.numeric(df6$Eye)
df6$Nervous.System.s <-as.numeric(df6$Nervous.System)
df6$Musculoskeletal.s <- as.numeric(df6$Musculoskeletal)
df6$Genitourinary.s <-as.numeric(df6$Genitourinary)
df6$Skin.s <-as.numeric(df6$Skin)
df6$Cardiovascular.s <-as.numeric(df6$Cardiovascular)
df6$Respiratory.s <- as.numeric(df6$Respiratory)
df6$Other.s <- as.numeric(df6$Other)
df6$Gastrointestinal.s <-as.numeric(df6$Gastrointestinal)
df6<- df6 %>% group_by_(~City) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
data.needed1<- filter_(df6,~City %in% xvar) %>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = xvar)
data.needed2<- filter_(df6,~City %in% yvar)%>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = yvar)
data.needed3 <-left_join(data.needed2,data.needed1, by = "surgery")
x1.equation <- paste0('~', xvar1)
x2.equation <- paste0('~', xvar2)
#Create the function for the box chart according to the city level
p <- plot_ly(data.needed3, x = eval(parse(text = x1.equation)), y = data.needed3$surgery, name = xvar1,
mode = "markers", marker = list(color = "purple")) %>%
add_trace(x =  eval(parse(text = x1.equation)), name = xvar2, y = data.needed3$surgery, marker = list(color = "orange"),
mode = "markers") %>%
layout(
title = "Amount of procedures disparity between two hospital",
xaxis = list(title = "number of surgery")
)
return(p)
}
#Install the packages that we need to use for this plot
library(ggplot2)
library(tidyr)
library(plotly)
library(shiny)
library(dplyr)
library(devtools)
library(reshape2)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
#In df4, I select the state and the hospital and the state name, which is necessary, since we doesn't need evey data
#Also because we are using this later to combine it with df2, which I have checked, not all the data are matched.
df4 = df1 %>% distinct_(~Hospital.Name,~State,~City)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df6 <- df5 %>% group_by_(~City) %>% select(City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
Builddot.city <-function(xvar1,xvar2){
df6$Eye.s <- as.numeric(df6$Eye)
df6$Nervous.System.s <-as.numeric(df6$Nervous.System)
df6$Musculoskeletal.s <- as.numeric(df6$Musculoskeletal)
df6$Genitourinary.s <-as.numeric(df6$Genitourinary)
df6$Skin.s <-as.numeric(df6$Skin)
df6$Cardiovascular.s <-as.numeric(df6$Cardiovascular)
df6$Respiratory.s <- as.numeric(df6$Respiratory)
df6$Other.s <- as.numeric(df6$Other)
df6$Gastrointestinal.s <-as.numeric(df6$Gastrointestinal)
df6<- df6 %>% group_by_(~City) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
data.needed1<- filter_(df6,~City %in% xvar) %>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = xvar)
data.needed2<- filter_(df6,~City %in% yvar)%>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = yvar)
data.needed3 <-left_join(data.needed2,data.needed1, by = "surgery")
x1.equation <- paste0('~', xvar1)
x2.equation <- paste0('~', xvar2)
#Create the function for the box chart according to the city level
p <- plot_ly(data.needed3, x = eval(parse(text = x1.equation)), y = data.needed3$surgery, name = xvar1,
mode = "markers", marker = list(color = "purple")) %>%
add_trace(x =  eval(parse(text = x1.equation)), name = xvar2, y = data.needed3$surgery, marker = list(color = "orange"),
mode = "markers") %>%
layout(
title = "Amount of procedures disparity between two hospital",
xaxis = list(title = "Amount of surgery")
)
return(p)
}
View(df6)
# ui.R
library(shinythemes)
library(shiny)
library(plotly)
library(stringr)
library(dplyr)
library(DT)
#This setting for taglist is used to make the theme of the internet
ui = tagList(
shinythemes::themeSelector(),
navbarPage(
theme = "slate",
'Procedures across USA in 2014',
# Create a tab panel for your charts
tabPanel('State level analyzation',
titlePanel('Analyztion of different kind of procedures in state level'),
# Create sidebar layout for the in-depth analyzation from state level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the state level, you choose the surgery you want to compare among all the states that are information available(Some hospital refused to offer their statistics)
selectInput('ycol2', 'Type of Surgery for State level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bar.state')
)
)
),
tabPanel('City level analyzation',
titlePanel('Comparison of two cities across USA'),
# Create sidebar layout for the in-depth analyzation for city level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the city level,choos two cities you want to compare.
selectInput('xcol1', 'City 1',
choices = unique(df6$City, incomparables = TRUE)
selected = "ANCHORAGE"
),
selectInput('xcol2', 'City 2',
choices = df6$City,
selected = "MISSION VIEJO"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bubble')
)
)
),
tabPanel('Hopital level analyzation',
titlePanel('Analyztion of various procedures in the hospital level'),
# Create sidebar layout for the in-depth analyzation from hospital level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the hospital level, there are two ways to compare, the bubble chart offers you a way to compare certain surgery among all the hospitals that offered their statistics.
selectInput('ycol', 'Type of Surgery for hospital level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bubble')
)
)
),
tabPanel('Search a hospital',
titlePanel('Search specific hospital data'),
# Create sidebar layout for the hopital that the user want to look at.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#The pie chart based on the hospital level offer you a choice of hospital you want to look into, and show the proportion of the procedures that the hospital had conducted.
#A table contains the hospital name, state, and procedures' numbers
selectInput('ycol3', 'Hopital choice',
choices = df2$Hospital.Name ,
selected = "CROSSROADS COMMUNITY HOSPITAL")
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('pie.hospital'),DT::dataTableOutput('table1')
)
)
)
))
# ui.R
library(shinythemes)
library(shiny)
library(plotly)
library(stringr)
library(dplyr)
library(DT)
#This setting for taglist is used to make the theme of the internet
ui = tagList(
shinythemes::themeSelector(),
navbarPage(
theme = "slate",
'Procedures across USA in 2014',
# Create a tab panel for your charts
tabPanel('State level analyzation',
titlePanel('Analyztion of different kind of procedures in state level'),
# Create sidebar layout for the in-depth analyzation from state level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the state level, you choose the surgery you want to compare among all the states that are information available(Some hospital refused to offer their statistics)
selectInput('ycol2', 'Type of Surgery for State level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bar.state')
)
)
),
tabPanel('City level analyzation',
titlePanel('Comparison of two cities across USA'),
# Create sidebar layout for the in-depth analyzation for city level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the city level,choos two cities you want to compare.
selectInput('xcol1', 'City 1',
choices = unique(df6$City, incomparables = TRUE),
selected = "ANCHORAGE"
),
selectInput('xcol2', 'City 2',
choices = unique(df6$City,incomparables = TRUE),
selected = "MISSION VIEJO"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bubble')
)
)
),
tabPanel('Hopital level analyzation',
titlePanel('Analyztion of various procedures in the hospital level'),
# Create sidebar layout for the in-depth analyzation from hospital level.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#In the hospital level, there are two ways to compare, the bubble chart offers you a way to compare certain surgery among all the hospitals that offered their statistics.
selectInput('ycol', 'Type of Surgery for hospital level',
choices = list("Gastrointestinal surgery" = 'Gastrointestinal', "Eye surgery" = 'Eye',
"Nervous System surgery"= 'Nervous.System', "Musculoskeletal surgery"= 'Musculoskeletal',
"Skin surgery" = 'Skin',"Genitourinary surgery" = 'Genitourinary',
"Cardiovascular surgery" = 'Cardiovascular', "Respiratory surgery" = 'Respiratory',
"Other kind of surgery" = 'Other'
),
selected = "Gastrointestinal"
)
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('bubble')
)
)
),
tabPanel('Search a hospital',
titlePanel('Search specific hospital data'),
# Create sidebar layout for the hopital that the user want to look at.
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to chats
#The pie chart based on the hospital level offer you a choice of hospital you want to look into, and show the proportion of the procedures that the hospital had conducted.
#A table contains the hospital name, state, and procedures' numbers
selectInput('ycol3', 'Hopital choice',
choices = df2$Hospital.Name ,
selected = "CROSSROADS COMMUNITY HOSPITAL")
),
# Main panel: display plotly charts and a table that you can search for a certain hospital's information about surgery.
mainPanel(
plotlyOutput('pie.hospital'),DT::dataTableOutput('table1')
)
)
)
))
library(reshape2)
#Install the packages that we need to use for this plot
library(plotly)
library(shiny)
library(dplyr)
library(reshape2)
df1<- read.csv('./data/Survey.csv',stringsAsFactors = FALSE)
df2 <- read.csv('./data/Procedures.csv',stringsAsFactors = FALSE)
#In df4, I select the state and the hospital and the state name, which is necessary, since we doesn't need evey data
#Also because we are using this later to combine it with df2, which I have checked, not all the data are matched.
df4 = df1 %>% distinct_(~Hospital.Name,~State,~City)
#df5 is the data frame that joined two sets of data. Our data is a little bit weird since the N/A part is not blank, we can not use the normal mathod to get rid of the N/A part.
#After observation, the N/A part will shown "Not available" in two parts. The first part is in every surgery, and one of the row only shown in the column of "Cardivascular".
# As a result, i can used filter to get rid off the hospital that refused to offered data, in order to let our plots publish succcessfully.
df5 <- left_join(df4,df2,by = "Hospital.Name") %>% filter_(~Gastrointestinal != "Not Available") %>%filter_(~Cardiovascular != "Not Available") %>%
select(Hospital.Name,State,City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
#df3 was created for the state level, I grouped it according to states, and selected only the information I need for the bar graph.
df3 <- df5 %>% group_by_(~State) %>% select(State,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
df6 <- df5 %>% group_by_(~City) %>% select(City,Gastrointestinal,Eye,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other)
Builddot.city <-function(xvar1,xvar2){
df6$Eye.s <- as.numeric(df6$Eye)
df6$Nervous.System.s <-as.numeric(df6$Nervous.System)
df6$Musculoskeletal.s <- as.numeric(df6$Musculoskeletal)
df6$Genitourinary.s <-as.numeric(df6$Genitourinary)
df6$Skin.s <-as.numeric(df6$Skin)
df6$Cardiovascular.s <-as.numeric(df6$Cardiovascular)
df6$Respiratory.s <- as.numeric(df6$Respiratory)
df6$Other.s <- as.numeric(df6$Other)
df6$Gastrointestinal.s <-as.numeric(df6$Gastrointestinal)
df6<- df6 %>% group_by_(~City) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
data.needed1<- filter_(df6,~City %in% xvar) %>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = xvar)
data.needed2<- filter_(df6,~City %in% yvar)%>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = yvar)
data.needed3 <-left_join(data.needed2,data.needed1, by = "surgery")
x1.equation <- paste0('~', xvar1)
x2.equation <- paste0('~', xvar2)
#Create the function for the box chart according to the city level
p <- plot_ly(data.needed3, x = eval(parse(text = x1.equation)), y = data.needed3$surgery, name = xvar1,
mode = "markers", marker = list(color = "purple")) %>%
add_trace(x =  eval(parse(text = x1.equation)), name = xvar2, y = data.needed3$surgery, marker = list(color = "orange"),
mode = "markers") %>%
layout(
title = "Amount of procedures disparity between two hospital",
xaxis = list(title = "Amount of surgery")
)
return(p)
}
#Install the packages that we need to use for this plot
library(plotly)
library(shiny)
library(dplyr)
library(reshape2)
Builddot.city <-function(xvar1,xvar2){
df6$Eye.s <- as.numeric(df6$Eye)
df6$Nervous.System.s <-as.numeric(df6$Nervous.System)
df6$Musculoskeletal.s <- as.numeric(df6$Musculoskeletal)
df6$Genitourinary.s <-as.numeric(df6$Genitourinary)
df6$Skin.s <-as.numeric(df6$Skin)
df6$Cardiovascular.s <-as.numeric(df6$Cardiovascular)
df6$Respiratory.s <- as.numeric(df6$Respiratory)
df6$Other.s <- as.numeric(df6$Other)
df6$Gastrointestinal.s <-as.numeric(df6$Gastrointestinal)
df6<- df6 %>% group_by_(~City) %>% summarise(Gastrointestinal = sum(Gastrointestinal.s), Eye = sum(Eye.s), Nervous.System = sum(Nervous.System.s),
Musculoskeletal = sum(Musculoskeletal.s),Genitourinary = sum(Genitourinary.s),Skin = sum(Skin.s),
Cardiovascular = sum(Cardiovascular.s), Respiratory = sum(Respiratory.s), Other = sum(Other.s)) %>%
mutate(sum = Gastrointestinal + Eye + Nervous.System +Musculoskeletal + Genitourinary + Skin +Cardiovascular + Respiratory + Other)
data.needed1<- filter_(df6,~City %in% xvar) %>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = xvar)
data.needed2<- filter_(df6,~City %in% yvar)%>% select(Gastrointestinal,Eye ,Nervous.System,Musculoskeletal,Genitourinary,Skin,Cardiovascular,Respiratory,Other) %>%
melt(variable.name = "surgery", value.name = yvar)
data.needed3 <-left_join(data.needed2,data.needed1, by = "surgery")
x1.equation <- paste0('~', xvar1)
x2.equation <- paste0('~', xvar2)
#Create the function for the box chart according to the city level
p <- plot_ly(data.needed3, x = eval(parse(text = x1.equation)), y = data.needed3$surgery, name = xvar1,
mode = "markers", marker = list(color = "purple")) %>%
add_trace(x =  eval(parse(text = x1.equation)), name = xvar2, y = data.needed3$surgery, marker = list(color = "orange"),
mode = "markers") %>%
layout(
title = "Amount of procedures disparity between two hospital",
xaxis = list(title = "Amount of surgery")
)
return(p)
}
source('./Scripts/citydotchart.r')
#Server.r
#Load the package and library that we need to use
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
library(DT)
library(reshape2)
#Read in data
#Set the data set into the data frame
source('./Scripts/bubbledotchart.r')
source('./Scripts/barchart.r')
source('./Scripts/piecharthospital.r')
source('./Scripts/citydotchart.r')
